{"version":3,"sources":["Components/CountryDetails/CountryDetails.js","Containers/Countries/Countries.js","Components/WorldStats/WorldStats.js","Containers/Global/Global.js","App.js","reportWebVitals.js","index.js"],"names":["CountryDetails","details","className","map","country","index","alt","style","width","height","src","countryInfo","flag","value","cases","thousandSeparator","displayType","todayCases","deaths","todayDeaths","recovered","todayRecovered","Countries","useState","setDetails","setValue","searchCountry","setSearchCountry","useEffect","a","axios","get","countriesData","countries","data","arraySort","reverse","fetchData","filterResults","filter","toLowerCase","includes","type","placeholder","onChange","e","target","sortByReverse","country_by_sort","console","log","defaultValue","disabled","selected","WorldStats","props","total","about","Global","result","setResult","globalData","corona","active","Stats","Object","keys","property","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5f88310.chunk.js","sourcesContent":["\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\n\r\nimport './CountryDetails.css';\r\n\r\nimport NumberFormat from 'react-number-format';\r\n\r\n\r\nconst CountryDetails = ({details}) => {\r\n\r\n    \r\n    return ( \r\n        <div className=\"countries-details \">\r\n             <table className=\"centered\">\r\n                <tbody> \r\n                    { details.map((country , index) =>(\r\n                        <tr key={index}>\r\n                            <td className = \"row-content flag\">\r\n                \r\n                                <img alt=\"Country Flag\" style = {{width : '120px' , height : '80px'}}src ={country.countryInfo.flag}/>\r\n                                <p>{country.country}</p>\r\n                            </td>\r\n\r\n                            <td className = \"row-content\">\r\n                                <p className =\"count cases\">\r\n                                    <NumberFormat value = {country.cases} thousandSeparator = {true} displayType = \"text\" />\r\n                                </p>\r\n                                <p className= \"yesterday\">Last 24 Hours: \r\n                                    <strong>\r\n                                        <NumberFormat value = {country.todayCases} thousandSeparator = {true} displayType = \"text\" />\r\n                                    </strong>\r\n                                </p>\r\n                            </td>\r\n\r\n                            <td className = \"row-content\">\r\n                                <p className =\"count deaths\">\r\n                                    <NumberFormat value = {country.deaths} thousandSeparator = {true} displayType = \"text\" />\r\n                                </p>\r\n                                <p className= \"yesterday\">Last 24 Hours: \r\n                                     <strong>\r\n                                        <NumberFormat value = {country.todayDeaths} thousandSeparator = {true} displayType = \"text\" />\r\n                                    </strong>\r\n                                </p>\r\n                            </td>\r\n\r\n                            <td className =\"row-content\">\r\n                                <p className =\"count recovered\">\r\n                                <NumberFormat value = {country.recovered} thousandSeparator = {true} displayType = \"text\" />\r\n                                </p>\r\n                                <p className= \"yesterday\">Last 24 Hours: \r\n                                    <strong>\r\n                                        <NumberFormat value = {country.todayRecovered} thousandSeparator = {true} displayType = \"text\" />  \r\n                                    </strong>\r\n                                </p>\r\n                            </td>\r\n                         </tr>\r\n                    ))\r\n                    \r\n                    }\r\n                 </tbody>\r\n            </table> \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default CountryDetails;","import './Countries.css';\r\nimport CountryDetails from '../../Components/CountryDetails/CountryDetails';\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\n\r\nimport axios from 'axios';\r\nimport arraySort from 'array-sort';\r\nimport { useEffect , useState } from 'react';\r\n\r\nconst Countries = () => {\r\n\r\n    const [details, setDetails] = useState([]);\r\n    const [value, setValue] = useState('Highest');\r\n    const [searchCountry , setSearchCountry] = useState(\"\");\r\n    \r\n\r\n    useEffect(() => {\r\n\r\n        const fetchData = async () => {\r\n            var countriesData = await axios.get('https://disease.sh/v3/covid-19/countries');\r\n\r\n            let countries = countriesData.data;\r\n\r\n            countries = arraySort(countries, 'cases', {reverse: true})\r\n\r\n            setDetails(countries);\r\n            \r\n\r\n        }\r\n\r\n        fetchData();\r\n    } , [] )\r\n\r\n\r\n   const ChangeSortValue = (e) => {\r\n        let value = e.target.value;\r\n        \r\n        let sortByReverse = true;\r\n\r\n        if(value === 'Highest'){\r\n            setValue('Highest');\r\n            sortByReverse = true;\r\n        }\r\n        else{\r\n            setValue('Lowest');\r\n            sortByReverse = false;\r\n        }\r\n\r\n        let country_by_sort = arraySort(details, 'cases', {reverse : sortByReverse});\r\n\r\n        setDetails(country_by_sort);\r\n        console.log(details);\r\n\r\n    } \r\n\r\n    const filterResults = details.filter((country) => {\r\n        return country.country.toLowerCase().includes(searchCountry.toLowerCase()) ;\r\n        }\r\n\r\n    );\r\n\r\n    const HandleSearch = (e) => {\r\n\r\n        \r\n        setSearchCountry(e.target.value);\r\n\r\n        let filteredResults = filterResults;\r\n\r\n        setDetails(filteredResults);\r\n    \r\n        \r\n    }\r\n\r\n    return ( \r\n        <div className=\"Countries-Stats \">\r\n            <h2 className=\"countries-stats-heading\">Countries Statistics</h2>\r\n            \r\n            <div className=\"container\">\r\n                <form className=\"col s12\">\r\n                    <div className=\"filtering row \">\r\n                        <div className=\"input-field col s8\">\r\n                            <input type=\"text\" \r\n                            placeholder = \"Enter Country Name\"\r\n                            value = {searchCountry}\r\n                            onChange = {HandleSearch} />\r\n                        </div>\r\n                        \r\n                        <div className=\"input-field col s4\">\r\n                            <select \r\n                             value = {value}\r\n                             className=\"sort-by\" \r\n                             onChange = {ChangeSortValue}  > \r\n                                <option defaultValue disabled selected>Sort By</option>\r\n                                <option value = 'Highest' >Highest</option>\r\n                                <option value = 'Lowest' >Lowest</option>\r\n                            </select>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </form>\r\n\r\n                <table className=\"centered\">\r\n                    <thead className = \"deep-purple accent-2\">\r\n                    <tr className=\"white-text\">\r\n                        <th className=\"heading-information\">Country</th>\r\n                        <th className=\"heading-information\">Cases</th>\r\n                        <th className=\"heading-information\">Deaths</th>\r\n                        <th className=\"heading-information\">Recovered</th>\r\n                    </tr>\r\n                    </thead>\r\n                   \r\n                </table>\r\n\r\n                \r\n                <CountryDetails details = {details}  />\r\n        \r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n     );\r\n}\r\n \r\nexport default Countries;","import './WorldStats.css'\r\n\r\nconst WorldStats = (props) => {\r\n    return ( \r\n      \r\n            <div className=\"worldStats-box\">\r\n                <h1 className=\"totalNumbers\">{props.total}</h1>\r\n                <p className=\"about\">{props.about}</p>\r\n            </div>\r\n\r\n     \r\n        \r\n     );\r\n}\r\n \r\nexport default WorldStats;","import { useEffect, useState } from 'react';\r\nimport WorldStats from '../../Components/WorldStats/WorldStats';\r\nimport './Global.css';\r\nimport axios from 'axios';\r\nimport NumberFormat from 'react-number-format';\r\n\r\n\r\nconst Global = () => {\r\n\r\n    const [result, setResult] = useState({\r\n        \"Total Confirmed\" : 0,\r\n        \"Total Deaths\" : 0,\r\n        \"Total Recovered\" : 0,\r\n        \"Active Case\" : 0\r\n\r\n    });\r\n\r\n\r\n    useEffect(() =>{\r\n\r\n        const fetchData = async () => {\r\n            var globalData = await axios.get('https://disease.sh/v3/covid-19/all');\r\n\r\n            let corona = globalData.data;\r\n\r\n           \r\n\r\n            setResult({\r\n                \"Total Confirmed\" : corona.cases ,\r\n                \"Total Deaths\" : corona.deaths,\r\n                \"Total Recovered\" : corona.recovered,\r\n                \"Active Case\" : corona.active\r\n            })\r\n        }\r\n\r\n        fetchData();\r\n\r\n    } , [])\r\n\r\n    var Stats = Object.keys(result).map((property, index) => {\r\n        return (<WorldStats key = {index}\r\n                           about = {property}\r\n                           total = {<NumberFormat value = {result[property]} thousandSeparator = {true} displayType = \"text\" />} /> )\r\n            \r\n    })\r\n\r\n\r\nreturn (  \r\n        <div className=\"Global\">\r\n            <h1 className=\"heading\">COVID-19 Tracker</h1>\r\n            <p className=\"description\">Let's check information about COVID-19</p>\r\n\r\n            <div className=\"world-statistics\">\r\n\r\n                {Stats}\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Global;","\nimport './App.css';\nimport Countries from './Containers/Countries/Countries';\nimport Global from './Containers/Global/Global';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Global />\n      <Countries />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}